# Sample NginX configuration file for publishing the content directory
# under a virtual host.
#
# You need to at least replace the placeholders below
# using the values that you used for invoking the uploader script.
# For instance, if you used:
#
#     $ upload.py --index-name index.html \
#                 --uri-prefix https://example.com/foo
#                 /path/to/content/bar ACTIONâ€¦
#
# Then the values for the placeholders are:
#
#   - INDEX_NAME: index.html
#   - PREFIX_HOST: example.com
#   - PREFIX_PATH: /foo
#   - CONTENT_DIR: /path/to/content/bar (as an *absolute* path)

server {
	# Serve HTTP.
	listen 80;
	listen [::]:80;

	# Serve HTTPS (certificates below).
	listen 443 ssl;
	listen [::]:443 ssl;

	ssl_certificate /etc/ssl/certs/PREFIX_HOST.pem;
	ssl_certificate_key /etc/ssl/private/PREFIX_HOST.pem;

        # Redirect HTTP to HTTPS.
	if ($scheme = http) {
		rewrite ^ https://$host$uri permanent;
	}

	server_name PREFIX_HOST;

	location PREFIX_PATH/ {
        	alias CONTENT_DIR/;
		index INDEX_NAME;
                autoindex off;

		try_files $uri $uri/ =404;
		# This ensures that data seeded to distributed storage
		# (either via Ouinet or other mechanisms)
		# and data injected when uploading is binary identical.
		gzip off;
	}

	# Do not serve Ouinet data directories.
	location ~ /\.ouinet {
		deny all;
	}

	# If PREFIX_PATH is /, you may remove this block.
        # It is here just to block access to everything else
        # except the content directory.
	location / {
		deny all;
	}
}
